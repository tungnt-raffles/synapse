{
	"name": "Huy",
	"properties": {
		"content": {
			"query": "--DIM_CARD\nCREATE PROCEDURE DIM_CARD_ETL\nAS BEGIN\n    TRUNCATE TABLE [Curated].[DIM_CARD];\n    -- SET IDENTITY_INSERT [Curated].[DIM_CARD] ON;\n\tINSERT INTO [Curated].[DIM_CARD]\n    SELECT \n    a.[Card HashKey] as CARD_ID\n    ,a.[Card Number]  as CARD_NUMBER\n    ,CONVERT(date, GETDATE() ,126) AS EFFECT_FROM_DATE\n    ,CONVERT(date, '2400-01-01' ,126) as EFFECT_TO_DATE\n    ,SUBSTRING(c.[Account Number], CHARINDEX('-', c.[Account Number])+1, LEN(c.[Account Number]) - CHARINDEX('-', c.[Account Number]) + 1)   AS [CARD_ACCOUNT_NUMBER]\n    ,e.[Customer Number] as [CUSTOMER_NUMBER]\n    ,'Active' as [CARD_STATUS]\n    ,case when g.[Account Status] like '5%' then 'Activate' else 'Waiting on Close' END  as [CARD_ACCOUNT_STATUS]\n    ,l.[Branch Number] as [BRANCH_CODE]\n    ,'CN'+ l.[Branch Number] as [BRANCH_NAME]\n    ,f.[Card Open Date] as [CARD_OPEN_DATE]\n    ,f.[Card Expiry Date] as [CARD_EXPIRY_DATE]\n    ,case when f.[Card Expiry Date]='2400-01-01' then 'Never Expired' else 'Expired on'+ f.[Card Expiry Date] END as [CARD_EXPIRY_STATUS]\n    ,f.[Card Class] as [CARD_CLASS]\n    ,i.[Product Number] as [CARD_PRODUCT]\n    FROM [Standardized].[H_CARD] a\n    INNER join [Standardized].[L_ACCOUNT_CARD] b on a.[Card HashKey]=  b.[Card HashKey]\n    INNER JOIN [Standardized].[H_ACCOUNT] c on b.[Account Hashkey]= c.[Account Hashkey]\n    INNER JOIN [Standardized].[L_CUSTOMER_CARD] d on a.[Card HashKey]=  d.[Card HashKey]\n    INNER JOIN [Standardized].[H_CUSTOMER] e on d.[Customer Hashkey]= e.[Customer Hashkey]\n    INNER JOIN [Standardized].[S_CARD] f on a.[Card HashKey]=  f.[Card HashKey]\n    INNER JOIN [Standardized].[S_ACCOUNT] g on c.[Account HashKey]=  g.[Account HashKey]\n    INNER join [Standardized].[L_CARD_PRODUCT] h on a.[Card HashKey]=  h.[Card HashKey]\n    INNER JOIN [Standardized].[H_PRODUCT] i on i.[Product HashKey]=  h.[Product HashKey]\n    INNER join [Standardized].[L_CARD_BRANCH] k on a.[Card HashKey]=  k.[Card HashKey]\n    INNER JOIN [Standardized].[H_BRANCH] L on K.[Branch HashKey]=  L.[Branch HashKey]\n    ;\n    -- SET IDENTITY_INSERT [Curated].[DIM_CARD] OFF;\nEND;\nEXEC DIM_CARD_ETL;\nDROP PROCEDURE DIM_CARD_ETL;\nSELECT * FROM Curated.DIM_CARD;\nselect * from Standardized.H_PRODUCT;\n---DIM_INDIVIDUAL_CUSTOMER\nCREATE PROCEDURE DIM_INDIVIDUAL_CUSTOMER_ETL\nAS BEGIN\n    TRUNCATE TABLE [Curated].[DIM_INDIVIDUAL_CUSTOMER];\n\tINSERT INTO [Curated].[DIM_INDIVIDUAL_CUSTOMER]\n    SELECT \n    a.[Customer HashKey] as [INDIVIDUAL_CUSTOMER_ID]\n    ,a.[Customer Number] as [INDIVIDUAL_CUSTOMER_NUMBER]\n    ,CONVERT(date, GETDATE() ,126) AS [EFFECT_FROM_DATE]\n    ,CONVERT(date, '2400-01-01' ,126) as [EEFECT_TO_DATE]\n    ,c.[Gender] as  [GENDER]\n    ,c.[Marital Status] as [MARITAL_STATUS]\n    ,c.[Country of Citizen] as [CTY_OF_CTZN]\n    ,c.[Living Standard] as [LIVING_STANDARD]\n    ,c.[Employmen Position] as [EMPLOYMENT_POSITION]\n    ,d.[Segment] as [SEGMENT]\n    ,c.[Name] as [CUSTOMER_FULL_NAME]\n    ,b.[Phone] as [CUSTOMER_PHONE_NUMBER]\n    FROM [Standardized].[H_CUSTOMER] a \n    inner join [Standardized].[S_CUSTOMER_CONTACT] B on a.[Customer HashKey] = b.[Customer HashKey]\n    inner join [Standardized].[S_CUSTOMER_DEMO] C on a.[Customer HashKey] = c.[Customer HashKey]\n    inner join [Standardized].[S_CUSTOMER_GEN_INFO] D on a.[Customer HashKey] = d.[Customer HashKey]\nEND; \nEXEC S_CUSTOMER_GEN_INFO_ETL '2022-08-31';\nDROP PROCEDURE DIM_INDIVIDUAL_CUSTOMER_ETL;\nSELECT * FROM Curated.DIM_INDIVIDUAL_CUSTOMER;\n\n---DIM_CARD_ACCOUNT\nCREATE PROCEDURE DIM_CARD_ACCOUNT_ETL\nAS BEGIN\n    TRUNCATE TABLE [Curated].[DIM_CARD_ACCOUNT];\n\tINSERT INTO [Curated].[DIM_CARD_ACCOUNT]\n    SELECT\n    a.[Account Hashkey] as [CARD_ACCOUNT_ID]\n    ,SUBSTRING(a.[Account Number], CHARINDEX('-', a.[Account Number])+1, LEN(a.[Account Number]) - CHARINDEX('-', a.[Account Number]) + 1)   as [CARD_ACCOUNT_NUIMBER]\n    ,CONVERT(date, GETDATE() ,126) AS [EFFECT_FROM_DATE]\n    ,CONVERT(date, '2400-01-01' ,126) as [EEFECT_TO_DATE]\n    ,e.[Customer Number] as [CUSTOMER_NUMBER]\n    ,l.[Branch Number] as [BRANCH_CODE]\n    ,'CN'+ l.[Branch Number] as [BRANCH_NAME]\n    FROM [Standardized].[H_ACCOUNT] a \n    inner join [Standardized].[L_ACCOUNT_BRANCH] b ON a.[Account Hashkey] = b.[Account Hashkey]\n    INNER join [Standardized].[L_ACCOUNT_CARD] c on a.[Account HashKey]=  c.[Account HashKey]\n    INNER JOIN [Standardized].[L_CUSTOMER_CARD] d on c.[Card HashKey]=  d.[Card HashKey]\n    INNER JOIN [Standardized].[H_CUSTOMER] e on d.[Customer Hashkey]= e.[Customer Hashkey]\n    INNER JOIN [Standardized].[H_BRANCH] L on b.[Branch HashKey]=  L.[Branch HashKey]\nEND;\nEXEC [StandardizedBank].[ProcedureAccount] '20220831';\nselect * from [Standardized].[H_ACCOUNT];\nDROP PROCEDURE DIM_CARD_ACCOUNT_ETL;\nSELECT * FROM Curated.DIM_CARD_ACCOUNT;\n\n---FACT_CARD_TRANSACTION\nCREATE PROCEDURE FACT_CARD_TRANSACTION_ETL @data_date nchar(8)\nAS BEGIN\n    DELETE FROM [Curated].[FACT_CARD_TRANSACTION] WHERE DATE_DIM_ID = @data_date; \n\tINSERT INTO [Curated].[FACT_CARD_TRANSACTION]\n    SELECT\n    @data_date AS [DATE_DIM_ID]\n    ,COALESCE(dic.[INDIVIDUAL_CUSTOMER_DIM_ID],-1) as [INDIVIDUAL_CUSTOMER_DIM_ID]\n    ,COALESCE(dc.[CARD_DIM_ID],-1) as [CARD_DIM_ID]\n    ,COALESCE(dca.[CARD_ACCOUNT_DIM_ID],-1) as [CARD_ACCOUNT_DIM_ID]\n    ,a.[Transaction Number] as [TRAN_ID]\n    ,s.[Transaction Amount] as [TRAN_AMT]\n    ,COALESCE(dic.[INDIVIDUAL_CUSTOMER_DIM_ID],-1)%10+1  as [CUSTOMER_TYPE]\n    FROM [Standardized].[H_TRANSACTION] a \n    INNER JOIN [Standardized].[L_CARD_TRANSACTION] b on a.[Transaction HashKey]= b.[Transaction HashKey]\n    INNER JOIN [Standardized].[L_CUSTOMER_CARD] c on b.[Card HashKey]=  c.[Card HashKey]\n    INNER join [Standardized].[L_ACCOUNT_CARD] d on c.[Card HashKey]=  d.[Card HashKey]\n    INNER JOIN [Standardized].[S_TRANSACTION_TURNOVER] s on a.[Transaction HashKey]=  s.[Transaction HashKey]\n    LEFT JOIN [Curated].[DIM_INDIVIDUAL_CUSTOMER] dic on c.[Customer HashKey]=dic.[INDIVIDUAL_CUSTOMER_ID] and CONVERT(date, @data_date) between dic.[EFFECT_FROM_DATE] and dic.[EEFECT_TO_DATE]\n    LEFT JOIN [Curated].[DIM_CARD] dc on c.[Card HashKey]=dc.[CARD_ID] and CONVERT(date, @data_date) between dc.[EFFECT_FROM_DATE] and dc.[EEFECT_TO_DATE]\n    LEFT JOIN [Curated].[DIM_CARD_ACCOUNT] dca on d.[Account HashKey]=dca.[CARD_ACCOUNT_ID] and CONVERT(date, @data_date) between dca.[EFFECT_FROM_DATE] and dca.[EEFECT_TO_DATE]\nEND;\nDROP PROCEDURE FACT_CARD_TRANSACTION_ETL;\nEXEC FACT_CARD_TRANSACTION_ETL '20221005';\nSELECT * FROM Curated.FACT_CARD_TRANSACTION where DATE_DIM_ID = '20221005';\nselect * FROM [Standardized].[H_TRANSACTION] a \n    INNER JOIN [Standardized].[L_CARD_TRANSACTION] b on a.[Transaction HashKey]= b.[Transaction HashKey]\n    Join [Standardized].[L_CUSTOMER_CARD] c on b.[Card HashKey]=  c.[Card HashKey] join [Standardized].[L_ACCOUNT_CARD] d on c.[Card HashKey]=  d.[Card HashKey] ;\nALTER table Curated.FACT_CARD_TRANSACTION add CUSTOMER_TYPE nvarchar(400);\n\nEXEC L_CUSTOMER_CARD_ETL '20220831';\nselect * from [Standardized].[L_CUSTOMER_CARD];\n\n\n\nselect top 10 * from [Curated].[DIM_CARD] \n-- CONVERT(date, @data_date) between dc.[EFFECT_FROM_DATE] and dc.[EEFECT_TO_DATE]\n\nselect * from [Standardized].[L_CUSTOMER_CARD] where [Card Hashkey] ='16892D80EBD6E34486601EC6AD0D7444';\nselect * from [Standardized].[H_CARD] where [Card Hashkey] ='16892D80EBD6E34486601EC6AD0D7444';\nselect * from [Standardized].[S_CARD] where [Card Hashkey] ='16892D80EBD6E34486601EC6AD0D7444';\nselect * from [Standardized].[L_CARD_TRANSACTION] where [Card Hashkey] ='16892D80EBD6E34486601EC6AD0D7444';\n\nselect * from [Standardized].[L_CARD_TRANSACTION]\n\nDROP proc [dbo].[Standardized.L_ACCOUNT_CARD_ETL];\nCREATE PROC L_ACCOUNT_CARD_ETL @data_date [int] AS BEGIN\n    TRUNCATE TABLE Standardized.L_ACCOUNT_CARD;\n\tINSERT INTO Standardized.L_ACCOUNT_CARD\n    SELECT\n        Standardized.FunctionHashMD5('ACCOUNT_CARD' + '-' + c.ID + '-' + c.contract_number + '-' + a.ID + '-' + a.contract_number) AS [Account_X_Card Hashkey]\n        ,Standardized.FunctionHashMD5('ACCOUNT' + '-' + c.id + '-' + c.contract_number) AS [Account HashKey]\n        ,Standardized.FunctionHashMD5('CARD' + '-' + a.id + '-' + a.contract_number) AS [Card HashKey]\n        ,'LandingBank.CardTransaction' AS [Record Source]\n        ,CONVERT(date, GETDATE() ,103) AS [Load Date]\n    FROM [LandingBank].[Card]  a\n    inner join [LandingBank].[Card] c ON c.data_date=20220831 and c.amnd_state='A' and c.con_cat='A' and c.id=a.ACNT_CONTRACT__OID\n    where a.data_date=20220831 and a.amnd_state='A' and a.con_cat= 'C' and a.base_relation is null\nEND;\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "raffles_synapse",
				"poolName": "raffles_synapse"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}